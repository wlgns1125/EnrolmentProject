/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * 학과장메뉴.java
 *
 * Created on 2010. 6. 25, 오후 3:22:22
 */

package javaapplication1;
import java.awt.Component;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.Container.*;
import java.awt.event.*;
import java.util.*;
/**
 *
 * @author Jin
 */
public class 학과장메뉴 extends javax.swing.JFrame {
    개설과목입력사항 개설과목등록;
    개설과목입력사항 개설과목수정;
    강의계획서입력사항 강의계획서등록;
    강의계획서입력사항 강의계획서수정;

    static public String 학과;
    static public String 교수코드;
    private Component Component;
    /** Creates new form 학과장메뉴 */
    public 학과장메뉴() {
        initComponents();
    }
    public 학과장메뉴(String ID) {
        initComponents();
        교수코드 = ID;

        개설과목출력();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void 개설과목출력() {

        Connection conn = null;
        Statement stmt = null;
        ResultSet rs =null;
        DBConn dbconn = new DBConn();
        conn = dbconn.getConnection();

        Statement stmt2 = null;
        ResultSet rs2 =null;
        try {
            stmt = conn.createStatement();
            stmt2 = conn.createStatement();
            String query = "select * from 개설과목";
            rs = stmt.executeQuery(query);

            DefaultTableModel table1 = (DefaultTableModel)this.개설과목관리테이블.getModel();
            DefaultTableModel table2 = (DefaultTableModel)this.jTable3.getModel();
            while(rs.next())
            {
                Object[] row = new Object[10];

                String query2 = "select * from 교과과정내역 where 과목코드='"+rs.getString("과목코드")+"'";
                rs2 = stmt2.executeQuery(query2);
                rs2.next();
                row[0] = rs2.getString("학년");
                row[1] = rs2.getString("교과목구분");

                query2 = "select * from 과목 where 과목코드='"+rs.getString("과목코드")+"'";
                rs2 = stmt2.executeQuery(query2);
                rs2.next();
                row[2] = rs2.getString("교과목명");
                row[3] = rs2.getString("과목코드");
                row[4] = rs2.getString("학점");
                row[7] = rs2.getInt("이론시간")+rs2.getInt("설계시간")+rs2.getInt("실습시간");

                query2 = "select * from 강의담당교수 where 과목코드='"+rs.getString("과목코드")+"'";
                rs2 = stmt2.executeQuery(query2);
                if(rs2.next() == true){
                String tmp = rs2.getString("교수코드");
                query2 = "select * from 교수 where 교수코드='"+tmp+"'";
                rs2 = stmt2.executeQuery(query2);
                rs2.next();
                row[5] = rs2.getString("이름");
                }



                query2 = "select * from 교과과정 where 교과과정코드='"+rs.getString("교과과정코드")+"'";
                rs2 = stmt2.executeQuery(query2);
                rs2.next();
                row[6] = rs2.getString("과정명");
                학과 = rs2.getString("과정명");

                row[8] = rs.getString("제한인원") ;
                row[9] = rs.getString("신청인원") ;

                table1.addRow(row);
                table2.addRow(row);
            }


        } catch (Exception e) {
            System.out.println("Error");
            e.printStackTrace();
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        강의시간표입력 = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        개설과목관리테이블 = new javax.swing.JTable();
        개설과목수정버튼 = new javax.swing.JButton();
        개설과목등록버튼 = new javax.swing.JButton();
        개설과목삭제버튼 = new javax.swing.JButton();
        이전년도개설과목불러오기버튼 = new javax.swing.JButton();
        저장버튼 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        담당개설과목목록 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();

        강의시간표입력.setTitle("강의시간표입력");
        강의시간표입력.setMinimumSize(new java.awt.Dimension(350, 200));
        강의시간표입력.setModal(true);

        jLabel2.setText("강의시간");

        jLabel1.setText("요일");

        jButton13.setText("입력");

        jLabel3.setText("교과목코드");

        javax.swing.GroupLayout 강의시간표입력Layout = new javax.swing.GroupLayout(강의시간표입력.getContentPane());
        강의시간표입력.getContentPane().setLayout(강의시간표입력Layout);
        강의시간표입력Layout.setHorizontalGroup(
            강의시간표입력Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(강의시간표입력Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(강의시간표입력Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(29, 29, 29)
                .addGroup(강의시간표입력Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField3)
                    .addComponent(jTextField2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jButton13)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        강의시간표입력Layout.setVerticalGroup(
            강의시간표입력Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(강의시간표입력Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(강의시간표입력Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(강의시간표입력Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(강의시간표입력Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("학과장");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "   등록된개설과목목록   ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("맑은 고딕", 0, 12))); // NOI18N

        개설과목관리테이블.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        개설과목관리테이블.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "학년", "이수구분", "교과목명", "교과목코드", "학점", "담당교수", "수강학과", "강의시간", "제한인원", "신청인원"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        개설과목관리테이블.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(개설과목관리테이블);
        개설과목관리테이블.getColumnModel().getColumn(0).setResizable(false);
        개설과목관리테이블.getColumnModel().getColumn(0).setPreferredWidth(30);
        개설과목관리테이블.getColumnModel().getColumn(1).setResizable(false);
        개설과목관리테이블.getColumnModel().getColumn(2).setResizable(false);
        개설과목관리테이블.getColumnModel().getColumn(3).setResizable(false);
        개설과목관리테이블.getColumnModel().getColumn(4).setResizable(false);
        개설과목관리테이블.getColumnModel().getColumn(4).setPreferredWidth(30);
        개설과목관리테이블.getColumnModel().getColumn(5).setResizable(false);
        개설과목관리테이블.getColumnModel().getColumn(6).setResizable(false);
        개설과목관리테이블.getColumnModel().getColumn(7).setResizable(false);
        개설과목관리테이블.getColumnModel().getColumn(8).setResizable(false);
        개설과목관리테이블.getColumnModel().getColumn(8).setPreferredWidth(40);
        개설과목관리테이블.getColumnModel().getColumn(9).setResizable(false);
        개설과목관리테이블.getColumnModel().getColumn(9).setPreferredWidth(40);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        개설과목수정버튼.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        개설과목수정버튼.setText("개설과목수정");
        개설과목수정버튼.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                개설과목수정버튼ActionPerformed(evt);
            }
        });

        개설과목등록버튼.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        개설과목등록버튼.setText("개설과목등록");
        개설과목등록버튼.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                개설과목등록버튼ActionPerformed(evt);
            }
        });

        개설과목삭제버튼.setFont(new java.awt.Font("맑은 고딕", 0, 12));
        개설과목삭제버튼.setText("개설과목삭제");
        개설과목삭제버튼.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                개설과목삭제버튼ActionPerformed(evt);
            }
        });

        이전년도개설과목불러오기버튼.setFont(new java.awt.Font("맑은 고딕", 0, 12));
        이전년도개설과목불러오기버튼.setText("이전년도개설과목불러오기");
        이전년도개설과목불러오기버튼.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                이전년도개설과목불러오기버튼ActionPerformed(evt);
            }
        });

        저장버튼.setFont(new java.awt.Font("맑은 고딕", 0, 12));
        저장버튼.setText("저장");
        저장버튼.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                저장버튼ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(이전년도개설과목불러오기버튼)
                        .addGap(40, 40, 40)
                        .addComponent(개설과목등록버튼)
                        .addGap(31, 31, 31)
                        .addComponent(개설과목수정버튼)
                        .addGap(36, 36, 36)
                        .addComponent(개설과목삭제버튼)
                        .addGap(50, 50, 50)
                        .addComponent(저장버튼)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(이전년도개설과목불러오기버튼)
                    .addComponent(개설과목등록버튼)
                    .addComponent(개설과목수정버튼)
                    .addComponent(개설과목삭제버튼)
                    .addComponent(저장버튼))
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("개설과목관리", jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " 담당개설과목목록 ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("맑은 고딕", 0, 12))); // NOI18N

        담당개설과목목록.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "대학구분", "교과목명", "교과목코드", "분반", "강의구분"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        담당개설과목목록.getTableHeader().setReorderingAllowed(false);
        담당개설과목목록.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                담당개설과목목록MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(담당개설과목목록);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(234, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("강의계획서관리", jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "학과별개설과목목록", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("맑은 고딕", 0, 12))); // NOI18N

        jTable3.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "학년", "이수구분", "교과목명", "교과목코드", "학점", "담당교수", "수강학과", "강의시간", "제한인원", "신청인원"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable3);
        jTable3.getColumnModel().getColumn(0).setResizable(false);
        jTable3.getColumnModel().getColumn(1).setResizable(false);
        jTable3.getColumnModel().getColumn(2).setResizable(false);
        jTable3.getColumnModel().getColumn(3).setResizable(false);
        jTable3.getColumnModel().getColumn(4).setResizable(false);
        jTable3.getColumnModel().getColumn(5).setResizable(false);
        jTable3.getColumnModel().getColumn(6).setResizable(false);
        jTable3.getColumnModel().getColumn(7).setResizable(false);
        jTable3.getColumnModel().getColumn(8).setResizable(false);
        jTable3.getColumnModel().getColumn(9).setResizable(false);

        jButton11.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        jButton11.setText("입력");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("맑은 고딕", 0, 12)); // NOI18N
        jButton12.setText("수정");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(703, Short.MAX_VALUE)
                .addComponent(jButton11)
                .addGap(18, 18, 18)
                .addComponent(jButton12)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton11))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("강의시간표관리", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 892, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void 전년도개설과목출력() {
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs =null;
        DBConn dbconn = new DBConn();
        conn = dbconn.getConnection();

        Statement stmt2 = null;
        ResultSet rs2 =null;

        TableModel tm = 개설과목관리테이블.getModel();
        개설과목관리테이블.removeAll();
        try {
            stmt = conn.createStatement();
            stmt2 = conn.createStatement();
            String query = "select * from 전년도개설과목";
            rs = stmt.executeQuery(query);

            DefaultTableModel table = (DefaultTableModel)this.개설과목관리테이블.getModel();
            for(int i=0; i<tm.getRowCount(); i++)
                table.removeRow(i);
          
            while(rs.next())
            {
                Object[] row = new Object[10];

                String query2 = "select * from 교과과정내역 where 과목코드='"+rs.getString("과목코드")+"'";
                rs2 = stmt2.executeQuery(query2);
                rs2.next();
                row[0] = rs2.getString("학년");
                row[1] = rs2.getString("교과목구분");

                query2 = "select * from 과목 where 과목코드='"+rs.getString("과목코드")+"'";
                rs2 = stmt2.executeQuery(query2);
                rs2.next();
                row[2] = rs2.getString("교과목명");
                row[3] = rs2.getString("과목코드");
                row[4] = rs2.getString("학점");
                row[7] = rs2.getInt("이론시간")+rs2.getInt("설계시간")+rs2.getInt("실습시간");

                query2 = "select * from 강의담당교수 where 과목코드='"+rs.getString("과목코드")+"'";
                rs2 = stmt2.executeQuery(query2);
                if(rs2.next() == true){
                String tmp = rs2.getString("교수코드");
                query2 = "select * from 교수 where 교수코드='"+tmp+"'";
                rs2 = stmt2.executeQuery(query2);
                rs2.next();
                row[5] = rs2.getString("이름");
                }



                query2 = "select * from 교과과정 where 교과과정코드='"+rs.getString("교과과정코드")+"'";
                rs2 = stmt2.executeQuery(query2);
                rs2.next();
                row[6] = rs2.getString("과정명");
                학과 = rs2.getString("과정명");

                row[8] = rs.getString("제한인원") ;
                row[9] = rs.getString("신청인원") ;

                table.addRow(row);
            }


        } catch (Exception e) {
            System.out.println("Error");
            e.printStackTrace();
        }
    }
    private void 이전년도개설과목불러오기버튼ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_이전년도개설과목불러오기버튼ActionPerformed
        // TODO add your handling code here:
        개설과목출력();
    }//GEN-LAST:event_이전년도개설과목불러오기버튼ActionPerformed

    private void 개설과목등록버튼ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_개설과목등록버튼ActionPerformed
        // TODO add your handling code here:
        // 개설과목등록버튼
        개설과목등록 = new 개설과목입력사항(this, "등록");

        개설과목등록.setVisible(true);

        this.setVisible(false);
    }//GEN-LAST:event_개설과목등록버튼ActionPerformed

    private void 개설과목수정버튼ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_개설과목수정버튼ActionPerformed
        // TODO add your handling code here:
        // 개설과목수정버튼
        Object[] row = new Object[10];
        TableModel tm = 개설과목관리테이블.getModel();
        int select_row = 개설과목관리테이블.getSelectedRow();

        if(select_row < 0)
        {
            JOptionPane.showMessageDialog(null, "수정할 과목을 선택해 주세요");
            return;
        }

        for(int i=0; i<tm.getColumnCount(); i++)
        {
           row[i] = (Object)tm.getValueAt(select_row, i);
        }

        개설과목수정 = new 개설과목입력사항(this, row, "수정");

        개설과목수정.setVisible(true);

        this.setVisible(false);

    }//GEN-LAST:event_개설과목수정버튼ActionPerformed

    public void 등록결과 (Object []row) {
        DefaultTableModel table = (DefaultTableModel)this.개설과목관리테이블.getModel();
        row[6] = 학과;
        table.addRow(row);
        this.setVisible(true);
    }
    public void 수정결과(Object []row) {
        TableModel tm = 개설과목관리테이블.getModel();
        int select_row = 개설과목관리테이블.getSelectedRow();
        
        for(int i=0; i<tm.getColumnCount(); i++)
        {
           tm.setValueAt(row[i],select_row, i);
        }
        this.setVisible(true);
    }
    public void 프레임출력() {
        this.setVisible(true);
    }



    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        강의시간표입력.setVisible(true);
}//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        강의시간표입력.setVisible(true);
}//GEN-LAST:event_jButton12ActionPerformed

    private void 개설과목삭제버튼ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_개설과목삭제버튼ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel)this.개설과목관리테이블.getModel();
        int select_row = 개설과목관리테이블.getSelectedRow();
        if(select_row < 0)
        {
            JOptionPane.showMessageDialog(null, "삭제할 과목을 선택해 주세요");
            return;
        }
        int returnValue = JOptionPane.showConfirmDialog(Component, "정말 삭제하시겠습니까?");
        int message = 0;
        if (returnValue == JOptionPane.YES_OPTION) {
            message = 1;
        } else if (returnValue == JOptionPane.NO_OPTION) {
            message = 0;
        } else if (returnValue == JOptionPane.CANCEL_OPTION) {
            message = 0;
        } else if (returnValue == JOptionPane.CLOSED_OPTION) {
            message = 0;
        }

        if(message == 0)
        {
            return;
        }
        table.removeRow(select_row);
        //개설과목출력();
    }//GEN-LAST:event_개설과목삭제버튼ActionPerformed

    private void 저장버튼ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_저장버튼ActionPerformed
        // TODO add your handling code here:
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs =null;
        DBConn dbconn = new DBConn();
        conn = dbconn.getConnection();
        try {
            stmt = conn.createStatement();
        } catch (Exception e) {
            System.out.println("Error");
        }
 
        Object[] row = new Object[8];
        TableModel tm = 개설과목관리테이블.getModel();
        int leng = tm.getRowCount();
        
        Calendar ca = Calendar.getInstance();
        
        for(int i=0; i<leng; i++)
        {
            String tmp = tm.getValueAt(i, 3).toString();
            int count = 1;
            for(int j=i+1; j<leng; j++)
            {
                if(tmp.equals(tm.getValueAt(j, 3).toString()))
                {
                    count++;
                }
            }
            row[0] = count;
            row[2] = tmp;
            row[3] = tm.getValueAt(i, 8);
            row[4] = 0;
            row[5] = 1;
            row[6] = ca.get(Calendar.YEAR);
            if(ca.get(Calendar.MONTH) < 8)
                row[7] = 1;
            else
                row[7] = 2;
            
            try {
                String query = "select * from 교과과정내역 where 과목코드='"+tm.getValueAt(i, 3)+"'";
                rs = stmt.executeQuery(query);
                rs.next();

                row[1] = rs.getString("교과과정코드");
            } catch (Exception e) {
                System.out.println("Error2");
            }
            try {
                String query = "insert into  개설과목 (분반,교과과정코드,과목코드,제한인원,신청인원,개설확정여부,이수년도,이수학기) values('"+row[0]+"','"+row[1]+"','"+row[2]+"','"+row[3]+"','"+row[4]+"','"+row[5]+"','"+row[6]+"','"+row[7]+"')";
                stmt.executeUpdate(query);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_저장버튼ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs =null;
        DBConn dbconn = new DBConn();
        conn = dbconn.getConnection();

        try {
            stmt = conn.createStatement();

            rs = stmt.executeQuery("select * from 과목, 개설과목, 강의담당교수, 교과과정내역, 교과과정 where 과목.과목코드=개설과목.과목코드 and 교과과정.교과과정코드=교과과정내역.교과과정코드 and 개설과목.과목코드=교과과정내역.과목코드 and 강의담당교수.교수코드='"+교수코드+"' and 개설과목.분반=강의담당교수.분반 and 개설과목.교과과정코드=강의담당교수.교과과정코드 and 개설과목.과목코드=강의담당교수.과목코드");
            DefaultTableModel table = (DefaultTableModel)this.담당개설과목목록.getModel();
            while(rs.next()) {
                String[] strlist = new String[5];

                strlist[0] = rs.getString("과정명");
                strlist[1] = rs.getString("교과목명");
                strlist[2] = rs.getString("과목코드");
                strlist[3] = rs.getString("분반");
                strlist[4] = rs.getString("교과목구분");;

                table.addRow(strlist);
            }
        }catch(Exception e){ e.printStackTrace(); }
        finally{
            try{
                if(rs!=null) rs.close();
                if(stmt!=null) stmt.close();
            }catch(SQLException e){  }
        }
    }//GEN-LAST:event_formWindowOpened

    private void 담당개설과목목록MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_담당개설과목목록MouseClicked
        int row = 담당개설과목목록.getSelectedRow();
        if(row<0) return;
        TableModel tm = 담당개설과목목록.getModel();
        강의계획서입력사항 강의계획서 = new 강의계획서입력사항((String)tm.getValueAt(row, 2), 교수코드, Integer.parseInt((String)tm.getValueAt(row, 3)));
        강의계획서.setVisible(true);
}//GEN-LAST:event_담당개설과목목록MouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new 학과장메뉴().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JDialog 강의시간표입력;
    private javax.swing.JTable 개설과목관리테이블;
    private javax.swing.JButton 개설과목등록버튼;
    private javax.swing.JButton 개설과목삭제버튼;
    private javax.swing.JButton 개설과목수정버튼;
    private javax.swing.JTable 담당개설과목목록;
    private javax.swing.JButton 이전년도개설과목불러오기버튼;
    private javax.swing.JButton 저장버튼;
    // End of variables declaration//GEN-END:variables

}
